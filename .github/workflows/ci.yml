name: CI
on: [push, pull_request]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Run lint
        run: |
          python -m pip install tox
          tox -e lint

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Set git to use LF on Windows
        if: runner.os == 'Windows'
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: actions/setup-python@v1
        if: runner.os != 'Windows'  # see issue #174
        with:
          python-version: 2.7
      - uses: actions/setup-python@v1
        with:
          python-version: 3.5
      - uses: actions/setup-python@v1
        with:
          python-version: 3.9
      # - name: Install Visual C++ for Python 2.7
      #   if: runner.os == 'Windows'
      #   run: choco install vcpython27 -f -y
      - name: Run tests on Windows  # see issue #174
        if: runner.os == 'Windows'
        run: |
          python -m pip install tox
          tox -e py35,py39
      - name: Run tests on Linux and macOS
        if: runner.os != 'Windows'
        run: |
          python -m pip install tox
          tox --skip-missing-interpreters

  package-sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Build source package
        run: python setup.py sdist
      - name: Upload source package
        uses: actions/upload-artifact@v1
        with:
          name: sdist
          path: dist/

  package-wheel:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
        - name: manylinux
          os: ubuntu-latest
        - name: macos
          os: macos-latest
        - name: win
          os: windows-latest

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: actions/setup-python@v2

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel
      # - name: Install Visual C++ for Python 2.7
      #   if: runner.os == 'Windows'
      #   run: choco install vcpython27 -f -y
      - name: Build wheels for Windows  # see issue #174
        if: runner.os == 'Windows'
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD: cp35-${{ matrix.name }}* pp*-${{ matrix.name }}*
      - name: Build wheels for Linux and macOS
        if: runner.os != 'Windows'
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD: cp27-${{ matrix.name }}* cp35-${{ matrix.name }}* pp*-${{ matrix.name }}*
      - uses: actions/upload-artifact@v2
        with:
          name: wheels-${{ matrix.name }}
          path: ./wheelhouse/*.whl

  publish:
    runs-on: ubuntu-latest
    needs: [lint, test, package-sdist, package-wheel]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v1
        with:
          name: sdist
          path: dist/
      - uses: actions/download-artifact@v1
        with:
          name: wheels-win
          path: dist/
      - uses: actions/download-artifact@v1
        with:
          name: wheels-macos
          path: dist/
      - uses: actions/download-artifact@v1
        with:
          name: wheels-manylinux
          path: dist/
      - name: Publish to PyPI
        if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/')
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
